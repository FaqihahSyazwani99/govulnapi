name: 🔍 BOLA Security Scan - Enterprise Grade

on:
  push:
    branches: [ main, develop ]
  pull_request:

jobs:
  bola-scan:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      SCAN_DIR: 'src'
      OLLAMA_ENDPOINT: ${{ secrets.OLLAMA_ENDPOINT || 'http://localhost:11434' }}
      LANGCHAIN_API_KEY: ${{ secrets.LANGCHAIN_API_KEY }}
      OLLAMA_API_KEY: ${{ secrets.OLLAMA_API_KEY }}

    steps:
      - name: 📅 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📝 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: 💡 Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests tenacity

      - name: 🔢 Identify target files
        id: target-files
        run: |
          # Get changed files if available, else all files
          if [ "$GITHUB_EVENT_NAME" = "pull_request" ]; then
            BASE_REF="origin/${{ github.base_ref }}"
          else
            BASE_REF="HEAD^"
          fi
          
          CHANGED_FILES=$(git diff --name-only --diff-filter=AM $BASE_REF HEAD -- $SCAN_DIR | grep -E '\.(go|js|py|ts|java)$')
          ALL_FILES=$(find $SCAN_DIR -type f \( -name "*.go" -o -name "*.js" -o -name "*.py" -o -name "*.ts" -o -name "*.java" \))
          
          if [ -z "$CHANGED_FILES" ]; then
            FILES="$ALL_FILES"
            echo "ℹ️ Scanning all files in $SCAN_DIR"
          else
            FILES="$CHANGED_FILES"
            echo "ℹ️ Scanning changed files only"
          fi
          
          echo "TARGET_FILES=$(echo $FILES | jq -R -s -c 'split(" ") | map(select(. != ""))')" >> $GITHUB_OUTPUT

      - name: 🛡️ Run Enhanced BOLA Scanner
        env:
          TARGET_FILES: ${{ steps.target-files.outputs.TARGET_FILES }}
        run: |
          # ... [same bola_scanner.py content as before] ...

      # FIXED: Updated to v4
      - name: 📥 Upload Scan Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: bola-scan-results
          path: |
            bola-results.json
            bola-results.sarif

      - name: 📊 Upload SARIF Report
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: bola-results.sarif

      - name: ❌ Fail on vulnerabilities
        if: failure() && steps.bola-scan.outcome == 'failure'
        run: |
          echo "::error::BOLA vulnerabilities detected! Review scan artifacts"
          exit 1